set key1 0(是否启用压缩) 0(有效期,默认30天,单位为秒) 10(长度) 
set   键名　 是否启用压缩(0不启用/1启用)   缓存时间(默认为0表示最大有效期为30天)  　字符长度
一、memcache的cache机制是怎样的?
	1、默认情况下使用slab进行内存分配
	2、使用LRU(最近最少使用) + 超时失效算法
二、memcache如何实现冗余机制?
	没有实现冗余机制
三、memcache如何处理容错的?
	没有进行容错
四、如何将memcache中item批量导入导出?
	不建议进行导入导出数据，因为在导入导出时，可能会有数据失效，会产生一些脏数据(本应该失效的数据)。
五、memcache是如何做身份验证的？？
	没有做任何身份验证
六、memcache的多线程是什么？如何使用它们？
	多线程：指进程派发的一个线程。
	使用多核CPU来使用memcache的多个进程，memcache会自动处理多核CPU的信息，达到多线程工作状态。
七、emcache能接受的key的最大长度是多少？
	最大长度250个字符，在使用telnet 连接memcache进行set值的时候，最多可以支持250个字符
八、memcache对item的过期时间有什么限制？
	最大30天
九、memcache最大能存储多大的单个item？
	最大存储1M

memcache应用场景
	1、数据请求频繁，减轻数据库的压力，提升web访问速度
	2、session信息

	PHP连接memcache
	$mc = new Memcache();
	$mc -> addServer('ip地址1',11211);
	$mc -> addServer('ip地址2',11211);


Redis知识点
一、基于内存的缓存系统或数据库，支持持久化
	redis支持的数据类型比较多：字符串、链表、哈希、无序集合、有序集合。
二、Redis与Memcache的区别
	1）、memcache在服务器重启时数据会丢失，不支持技术化；redis支持持久化，当服务器重启时，会自动将数据还原到内存当中，这样数据就不会丢失。
	2）、memcache键名最大长度为250个字符；redis键名长度没有限制，但是键名的长度是越短越好，做到见其名知其意。
	3）、memcache每个kv存储的单位最大为1M；redis的键值存储的最大单位为512M，但是单个键值超过2M会影响redis性能
	4）、memcache只支持字符串类型；redis支持的存储类型比较多，字符串、链表、哈希、无序集合、有序集合。
	5）、memcache支持多线程工作，在多核CPU下可以发挥特性；redis只支持一个CPU对其进行操作，不支持多个CPU同时操作同一个redis。
三、数据中的时间转换函数
	from_unixtime(int 时间戳) 时间字符串
	unix_timestamp(时间字符串) int时间戳 
四、redis持久化功能
	持久化：redis将内存中的数据存储到硬盘，当服务器重启或者redis重启时
	将硬盘中的数据恢复到内存当中，避免数据丢失。
	默认方式
		snap shotting快照持久化(此方式备份机制决定于时间备份的间隔,可能存在备份不成功的情况)
		AOF 就是将修改的命令追加到一个文件当中，当服务器重启时，根据此文件的内容在内存中重建数据库。
			写入频率一般是，每秒备份一次(写入)
五、主从复制
	redis的主从复制和读写分离采用的是一主多从的方式,即使主的殆机了,从的也可以替代成为主的。
六、Redis Replication的特点和优势
	1）同一个Master可以同步多个Slaves。
	2）Slave同样可以接受其它Slaves的连接和同步请求，这样可以有效的分载Master的同步压力。因此我们可以将Redis的Replication架构视为一主多从结构。
	3）Master Server是以非阻塞的方式为Slaves提供服务。所以在Master-Slave同步期间，客户端仍然可以提交查询或修改请求。
	4）Slave Server同样是以非阻塞的方式完成数据同步。在同步期间，如果有客户端提交查询请求，Redis则返回同步之前的数据。
	5）为了分载Master的读操作压力，Slave服务器可以为客户端提供只读操作的服务，写服务仍然必须由Master来完成。即便如此，系统的伸缩性还是得到了很大的提高。
	6）Master可以将数据保存操作交给Slaves完成，从而避免了在Master中要有独立的进程来完成此操作。
	从服务器配置文件 : slaveof 域名/IP地址

	php连接redis
	$redis = new Redis();
	$redis -> connect('ip/域名',6379);